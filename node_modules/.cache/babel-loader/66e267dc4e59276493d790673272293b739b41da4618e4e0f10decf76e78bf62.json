{"ast":null,"code":"var _jsxFileName = \"/Users/hipl/Desktop/UpdChatFrontend/src/components/MainDiv.js\";\nimport React from \"react\";\nimport ChatInput from \"./ChatInput\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MainDiv = ({\n  users,\n  groups,\n  selectedUser,\n  setSelectedUser,\n  messages,\n  username,\n  handleSendMessage,\n  showAddOptions,\n  setShowAddOptions,\n  showGroupModal,\n  setShowGroupModal,\n  handleCreateGroup,\n  groupMembers,\n  setGroupMembers,\n  groupName,\n  setGroupName\n}) => {\n  var _messages$selectedUse;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-div\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [\"Chats\", /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"addPeople\",\n          onClick: () => setShowAddOptions(true),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), groups.map(group => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `user-item ${group.id === (selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.id) ? \"active\" : \"\"}`,\n        onClick: () => setSelectedUser(group),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [group.name, \" (Group)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, group.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)), users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `user-item ${user.id === (selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.id) ? \"active\" : \"\"}`,\n        onClick: () => setSelectedUser(user),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-panel\",\n      children: selectedUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          children: selectedUser.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages-container\",\n          children: (_messages$selectedUse = messages[selectedUser.name]) === null || _messages$selectedUse === void 0 ? void 0 : _messages$selectedUse.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${msg.sender === username ? \"sent\" : \"received\"}`,\n            children: [msg.sender === username ? \"You:\" : `${msg.sender}:`, \" \", msg.message]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n          sendMessage: handleSendMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-chat-selected\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a user to start chatting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_c = MainDiv;\nexport default MainDiv;\nvar _c;\n$RefreshReg$(_c, \"MainDiv\");","map":{"version":3,"names":["React","ChatInput","jsxDEV","_jsxDEV","Fragment","_Fragment","MainDiv","users","groups","selectedUser","setSelectedUser","messages","username","handleSendMessage","showAddOptions","setShowAddOptions","showGroupModal","setShowGroupModal","handleCreateGroup","groupMembers","setGroupMembers","groupName","setGroupName","_messages$selectedUse","className","children","id","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","group","name","user","msg","index","sender","message","sendMessage","_c","$RefreshReg$"],"sources":["/Users/hipl/Desktop/UpdChatFrontend/src/components/MainDiv.js"],"sourcesContent":["import React from \"react\";\nimport ChatInput from \"./ChatInput\";\n\nconst MainDiv = ({\n  users,\n  groups,\n  selectedUser,\n  setSelectedUser,\n  messages,\n  username,\n  handleSendMessage,\n  showAddOptions,\n  setShowAddOptions,\n  showGroupModal,\n  setShowGroupModal,\n  handleCreateGroup,\n  groupMembers,\n  setGroupMembers,\n  groupName,\n  setGroupName,\n}) => {\n  return (\n    <div className=\"main-div\">\n      <div className=\"left-panel\">\n        <header>\n          Chats\n          <button id=\"addPeople\" onClick={() => setShowAddOptions(true)}>\n            +\n          </button>\n        </header>\n        {groups.map((group) => (\n          <div\n            key={group.id}\n            className={`user-item ${group.id === selectedUser?.id ? \"active\" : \"\"}`}\n            onClick={() => setSelectedUser(group)}\n          >\n            <p>{group.name} (Group)</p>\n          </div>\n        ))}\n        {users.map((user) => (\n          <div\n            key={user.id}\n            className={`user-item ${user.id === selectedUser?.id ? \"active\" : \"\"}`}\n            onClick={() => setSelectedUser(user)}\n          >\n            <p>{user.name}</p>\n          </div>\n        ))}\n      </div>\n      <div className=\"right-panel\">\n        {selectedUser ? (\n          <>\n            <header>{selectedUser.name}</header>\n            <div className=\"messages-container\">\n              {messages[selectedUser.name]?.map((msg, index) => (\n                <div\n                  key={index}\n                  className={`message ${msg.sender === username ? \"sent\" : \"received\"}`}\n                >\n                  {msg.sender === username ? \"You:\" : `${msg.sender}:`} {msg.message}\n                </div>\n              ))}\n            </div>\n            <ChatInput sendMessage={handleSendMessage} />\n          </>\n        ) : (\n          <div className=\"no-chat-selected\">\n            <p>Select a user to start chatting</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MainDiv;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}