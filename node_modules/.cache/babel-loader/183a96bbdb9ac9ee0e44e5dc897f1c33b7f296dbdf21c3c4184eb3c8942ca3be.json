{"ast":null,"code":"var _jsxFileName = \"/Users/hipl/Downloads/ChatFrontend/src/components/ChatInput.js\",\n  _s = $RefreshSig$();\n// import { useState, useEffect } from \"react\";\n\n// import axios from 'axios';\n\n// function ChatInput(socket) {\n//       console.log(\"--socket---\",socket.socket.socket);\n//       const mainSocket  =socket.socket.socket\n\n//     const [message, setMessage] = useState('');\n//     const [messageList, setMessageList] = useState([]);\n//     const [selectedOption, setSelectedOption] = useState(\"\");\n\n//     const [selectedOptionReceiver, setSelectedOptionReceiver] = useState(\"\");\n\n//     const handleSelect = (event) => {\n//         setSelectedOption(event.target.value);\n//     };\n\n//     const handleSelectR = (event) => {\n//         setSelectedOptionReceiver(event.target.value);\n//     };\n\n//     useEffect(()=>{\n//         const getMessage= async() => {\n//             const resp = await axios.get('http://localhost:4000/api')\n//             setMessageList(resp.data.messages)\n\n//         }\n//         getMessage()\n\n//     },[])\n\n//     console.log(\"message\", messageList);\n\n//     const handleChange = (event) => {\n//         setMessage(event.target.value);\n//     };\n\n//     const handleSubmit = () => {\n\n//         if(selectedOption!==\"\"){\n//             console.log('Message sent: ', message);\n//             setMessageList((prev) => ([...prev,{ message:message ,createdAt : new Date()}]))\n//             mainSocket.emit(\"message\" , JSON.stringify({ message:message ,createdAt : new Date(),sender :selectedOption ,receiver : selectedOptionReceiver}))\n//             setMessage('');\n//         }\n\n//     };\n//     const handleKeyDown = (event) => {\n//         if (event.key === 'Enter') {\n//             handleSubmit();\n//         }\n//     }\n\n//     return (\n//         <>  \n//              <div>\n//             <label htmlFor=\"dropdown\">Choose an option:</label>\n//             <select id=\"dropdown\" value={selectedOption} onChange={handleSelect}>\n//                 <option value=\"\">--Select--</option>\n//                 <option value=\"piyush\">Piyush</option>\n//                 <option value=\"ankita\">ankita</option>\n//                 <option value=\"hans\">hans</option>\n//             </select>\n\n//             <p>You sender selected: {selectedOption}</p>\n//         </div>\n\n//         <div>\n//             <label htmlFor=\"dropdown\">Choose an option:</label>\n//             <select id=\"dropdown\" value={selectedOptionReceiver} onChange={handleSelectR}>\n//                 <option value=\"\">--Select--</option>\n//                 <option value=\"piyush\">Piyush</option>\n//                 <option value=\"ankita\">ankita</option>\n//                 <option value=\"hans\">hans</option>\n//             </select>\n\n//             <p>You receiver  selected: {selectedOptionReceiver}</p>\n//         </div>\n\n//             <div>\n\n//                 {messageList.map(\n//                     (element, index) => {\n//                         return (<li key={index}>{element.message} </li>)\n//                     }\n//                 )}\n//                 <input id=\"ip\"\n//                     type=\"text\"\n//                     value={message}\n//                     onChange={handleChange}\n//                     onKeyDown={handleKeyDown}\n//                     placeholder=\"Type a message...\"\n//                     className=\"chat-input\"\n//                 />\n//                 <button id=\"sendBtn\" onClick={handleSubmit}> <img id=\"senimg\" src=\"src/images/buttonsend.png\" alt=\"=>\"></img> </button>\n//             </div>\n//         </>\n//     );\n// }\n\n// export default ChatInput;\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatInput({\n  addMessage\n}) {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const handleSend = () => {\n    if (input.trim()) {\n      addMessage(input);\n      setInput(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"input-field\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      placeholder: \"Type a message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"send-button\",\n      onClick: handleSend,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatInput, \"RL+Zbs2TIka0YpcBOJptmHqCgYA=\");\n_c = ChatInput;\nexport default ChatInput;\nvar _c;\n$RefreshReg$(_c, \"ChatInput\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ChatInput","addMessage","_s","input","setInput","handleSend","trim","className","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/hipl/Downloads/ChatFrontend/src/components/ChatInput.js"],"sourcesContent":["// import { useState, useEffect } from \"react\";\n\n\n// import axios from 'axios';\n\n// function ChatInput(socket) {\n//       console.log(\"--socket---\",socket.socket.socket);\n//       const mainSocket  =socket.socket.socket\n      \n//     const [message, setMessage] = useState('');\n//     const [messageList, setMessageList] = useState([]);\n//     const [selectedOption, setSelectedOption] = useState(\"\");\n\n//     const [selectedOptionReceiver, setSelectedOptionReceiver] = useState(\"\");\n\n    \n\n   \n//     const handleSelect = (event) => {\n//         setSelectedOption(event.target.value);\n//     };\n\n//     const handleSelectR = (event) => {\n//         setSelectedOptionReceiver(event.target.value);\n//     };\n \n//     useEffect(()=>{\n//         const getMessage= async() => {\n//             const resp = await axios.get('http://localhost:4000/api')\n//             setMessageList(resp.data.messages)\n            \n//         }\n//         getMessage()\n\n//     },[])\n\n//     console.log(\"message\", messageList);\n\n\n//     const handleChange = (event) => {\n//         setMessage(event.target.value);\n//     };\n\n//     const handleSubmit = () => {\n       \n//         if(selectedOption!==\"\"){\n//             console.log('Message sent: ', message);\n//             setMessageList((prev) => ([...prev,{ message:message ,createdAt : new Date()}]))\n//             mainSocket.emit(\"message\" , JSON.stringify({ message:message ,createdAt : new Date(),sender :selectedOption ,receiver : selectedOptionReceiver}))\n//             setMessage('');\n//         }\n      \n//     };\n//     const handleKeyDown = (event) => {\n//         if (event.key === 'Enter') {\n//             handleSubmit();\n//         }\n//     }\n\n//     return (\n//         <>  \n//              <div>\n//             <label htmlFor=\"dropdown\">Choose an option:</label>\n//             <select id=\"dropdown\" value={selectedOption} onChange={handleSelect}>\n//                 <option value=\"\">--Select--</option>\n//                 <option value=\"piyush\">Piyush</option>\n//                 <option value=\"ankita\">ankita</option>\n//                 <option value=\"hans\">hans</option>\n//             </select>\n\n//             <p>You sender selected: {selectedOption}</p>\n//         </div>\n\n//         <div>\n//             <label htmlFor=\"dropdown\">Choose an option:</label>\n//             <select id=\"dropdown\" value={selectedOptionReceiver} onChange={handleSelectR}>\n//                 <option value=\"\">--Select--</option>\n//                 <option value=\"piyush\">Piyush</option>\n//                 <option value=\"ankita\">ankita</option>\n//                 <option value=\"hans\">hans</option>\n//             </select>\n\n//             <p>You receiver  selected: {selectedOptionReceiver}</p>\n//         </div>\n\n//             <div>\n                \n//                 {messageList.map(\n//                     (element, index) => {\n//                         return (<li key={index}>{element.message} </li>)\n//                     }\n//                 )}\n//                 <input id=\"ip\"\n//                     type=\"text\"\n//                     value={message}\n//                     onChange={handleChange}\n//                     onKeyDown={handleKeyDown}\n//                     placeholder=\"Type a message...\"\n//                     className=\"chat-input\"\n//                 />\n//                 <button id=\"sendBtn\" onClick={handleSubmit}> <img id=\"senimg\" src=\"src/images/buttonsend.png\" alt=\"=>\"></img> </button>\n//             </div>\n//         </>\n//     );\n// }\n\n// export default ChatInput;\n\n\nimport React, { useState } from \"react\";\n\nfunction ChatInput({ addMessage }) {\n  const [input, setInput] = useState(\"\");\n\n  const handleSend = () => {\n    if (input.trim()) {\n      addMessage(input);\n      setInput(\"\");\n    }\n  };\n\n  return (\n    <div className=\"input-container\">\n      <input\n        type=\"text\"\n        className=\"input-field\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        placeholder=\"Type a message\"\n      />\n      <button className=\"send-button\" onClick={handleSend}>\n        Send\n      </button>\n    </div>\n  );\n}\n\nexport default ChatInput;\n"],"mappings":";;AAAA;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAKA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,SAASA,CAAC;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EACjC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMQ,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIF,KAAK,CAACG,IAAI,CAAC,CAAC,EAAE;MAChBL,UAAU,CAACE,KAAK,CAAC;MACjBC,QAAQ,CAAC,EAAE,CAAC;IACd;EACF,CAAC;EAED,oBACEL,OAAA;IAAKQ,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BT,OAAA;MACEU,IAAI,EAAC,MAAM;MACXF,SAAS,EAAC,aAAa;MACvBG,KAAK,EAAEP,KAAM;MACbQ,QAAQ,EAAGC,CAAC,IAAKR,QAAQ,CAACQ,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC1CI,WAAW,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACFnB,OAAA;MAAQQ,SAAS,EAAC,aAAa;MAACY,OAAO,EAAEd,UAAW;MAAAG,QAAA,EAAC;IAErD;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAChB,EAAA,CAxBQF,SAAS;AAAAoB,EAAA,GAATpB,SAAS;AA0BlB,eAAeA,SAAS;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}