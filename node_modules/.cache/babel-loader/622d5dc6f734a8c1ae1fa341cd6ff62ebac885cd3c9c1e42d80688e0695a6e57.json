{"ast":null,"code":"var _jsxFileName = \"/Users/hipl/Downloads/newChatbot/ChatFrontendUpd/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://192.168.101.32:4000/api\"); // Replace with your backend IP\n\nfunction App() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [roomId, setRoomId] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [roomCreated, setRoomCreated] = useState(false);\n\n  // Listen for incoming messages and room events\n  useEffect(() => {\n    socket.on(\"receiveMessage\", data => {\n      setMessages(prevMessages => [...prevMessages, data]);\n    });\n    socket.on(\"roomCreated\", data => {\n      setRoomId(data.roomID);\n      setRoomCreated(true);\n    });\n    socket.on(\"roomJoined\", data => {\n      setRoomId(data.roomID);\n      setRoomCreated(true);\n    });\n    socket.on(\"errorMessage\", error => {\n      alert(error);\n    });\n    return () => {\n      socket.off(\"receiveMessage\");\n      socket.off(\"roomCreated\");\n      socket.off(\"roomJoined\");\n      socket.off(\"errorMessage\");\n    };\n  }, []);\n\n  // Handle room creation using socket event\n  const handleCreateRoom = () => {\n    if (username) {\n      socket.emit(\"createRoom\", username); // Emit room creation event to server\n    } else {\n      alert(\"Please enter a username\");\n    }\n  };\n\n  // Handle room joining using socket event\n  const handleJoinRoom = () => {\n    if (roomId && username) {\n      socket.emit(\"joinRoom\", {\n        roomID: roomId,\n        username: username\n      }); // Emit join room event\n    } else {\n      alert(\"Please enter a room ID and username\");\n    }\n  };\n\n  // Handle message sending using socket event\n  const handleSendMessage = () => {\n    if (message) {\n      socket.emit(\"sendMessage\", {\n        roomID: roomId,\n        username: username,\n        message: message\n      });\n      setMessage(\"\"); // Clear message input after sending\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chat Application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), !roomCreated ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateRoom,\n        children: \"Create Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Room ID to join\",\n        value: roomId,\n        onChange: e => setRoomId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleJoinRoom,\n        children: \"Join Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), roomCreated && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Room ID: \", roomId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.sender, \": \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this), msg.text]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type a message\",\n        value: message,\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"LGK/sggTCoCyRLEtY5R9DHyTnxY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","socket","App","_s","username","setUsername","roomId","setRoomId","messages","setMessages","message","setMessage","roomCreated","setRoomCreated","on","data","prevMessages","roomID","error","alert","off","handleCreateRoom","emit","handleJoinRoom","handleSendMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","msg","index","sender","text","_c","$RefreshReg$"],"sources":["/Users/hipl/Downloads/newChatbot/ChatFrontendUpd/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\n\nconst socket = io(\"http://192.168.101.32:4000/api\"); // Replace with your backend IP\n\nfunction App() {\n  const [username, setUsername] = useState(\"\");\n  const [roomId, setRoomId] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [roomCreated, setRoomCreated] = useState(false);\n\n  // Listen for incoming messages and room events\n  useEffect(() => {\n    socket.on(\"receiveMessage\", (data) => {\n      setMessages((prevMessages) => [...prevMessages, data]);\n    });\n\n    socket.on(\"roomCreated\", (data) => {\n      setRoomId(data.roomID);\n      setRoomCreated(true);\n    });\n\n    socket.on(\"roomJoined\", (data) => {\n      setRoomId(data.roomID);\n      setRoomCreated(true);\n    });\n\n    socket.on(\"errorMessage\", (error) => {\n      alert(error);\n    });\n\n    return () => {\n      socket.off(\"receiveMessage\");\n      socket.off(\"roomCreated\");\n      socket.off(\"roomJoined\");\n      socket.off(\"errorMessage\");\n    };\n  }, []);\n\n  // Handle room creation using socket event\n  const handleCreateRoom = () => {\n    if (username) {\n      socket.emit(\"createRoom\", username); // Emit room creation event to server\n    } else {\n      alert(\"Please enter a username\");\n    }\n  };\n\n  // Handle room joining using socket event\n  const handleJoinRoom = () => {\n    if (roomId && username) {\n      socket.emit(\"joinRoom\", { roomID: roomId, username: username }); // Emit join room event\n    } else {\n      alert(\"Please enter a room ID and username\");\n    }\n  };\n\n  // Handle message sending using socket event\n  const handleSendMessage = () => {\n    if (message) {\n      socket.emit(\"sendMessage\", { roomID: roomId, username: username, message: message });\n      setMessage(\"\"); // Clear message input after sending\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Chat Application</h1>\n\n      {!roomCreated ? (\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Enter your username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n          <button onClick={handleCreateRoom}>Create Room</button>\n        </div>\n      ) : (\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Enter Room ID to join\"\n            value={roomId}\n            onChange={(e) => setRoomId(e.target.value)}\n          />\n          <button onClick={handleJoinRoom}>Join Room</button>\n        </div>\n      )}\n\n      {roomCreated && (\n        <div>\n          <h2>Room ID: {roomId}</h2>\n          <div>\n            {messages.map((msg, index) => (\n              <div key={index}>\n                <strong>{msg.sender}: </strong>\n                {msg.text}\n              </div>\n            ))}\n          </div>\n          <input\n            type=\"text\"\n            placeholder=\"Type a message\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n          />\n          <button onClick={handleSendMessage}>Send</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}