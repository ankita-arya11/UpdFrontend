{"ast":null,"code":"var _jsxFileName = \"/Users/hipl/Documents/chatbot/ChatFrontend/src/components/mainDiv.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import ChatInput from './ChatInput';    \n\n// function MainDiv(){\n//     return (\n//         <>\n//             <div id='mDiv' className='teendiv'>\n//                 <div id='div1' className='teendiv' ></div>\n//                 <div id='div2' className='teendiv'>\n//                     <ChatInput/>\n//                 </div>\n//             </div>\n//         </>\n//     )\n// }\n// export default MainDiv;\n\nimport React, { useEffect, useState } from \"react\";\nimport ChatInput from \"./ChatInput\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:4000\");\nfunction MainDiv() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    socket.on(\"messageResponse\", data => {\n      setMessages(prevMessages => [...prevMessages, data]);\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"mDiv\",\n    className: \"teendiv\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"div1\",\n      className: \"teendiv\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"div2\",\n      className: \"teendiv\",\n      children: /*#__PURE__*/_jsxDEV(ChatInput, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(MainDiv, \"RyA59LRbn9goj/9N7rELX+NWNVI=\");\n_c = MainDiv;\nexport default MainDiv;\nvar _c;\n$RefreshReg$(_c, \"MainDiv\");","map":{"version":3,"names":["React","useEffect","useState","ChatInput","io","jsxDEV","_jsxDEV","socket","MainDiv","_s","messages","setMessages","on","data","prevMessages","disconnect","id","className","children","map","msg","index","text","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hipl/Documents/chatbot/ChatFrontend/src/components/mainDiv.js"],"sourcesContent":["// import React from 'react';\n// import ChatInput from './ChatInput';    \n\n// function MainDiv(){\n//     return (\n//         <>\n//             <div id='mDiv' className='teendiv'>\n//                 <div id='div1' className='teendiv' ></div>\n//                 <div id='div2' className='teendiv'>\n//                     <ChatInput/>\n//                 </div>\n//             </div>\n//         </>\n//     )\n// }\n// export default MainDiv;\n\n\nimport React, { useEffect, useState } from \"react\";\nimport ChatInput from \"./ChatInput\";\nimport { io } from \"socket.io-client\";\n\nconst socket = io(\"http://localhost:4000\");\n\nfunction MainDiv() {\n    const [messages, setMessages] = useState([]);\n\n    useEffect(() => {\n        socket.on(\"messageResponse\", (data) => {\n            setMessages((prevMessages) => [...prevMessages, data]);\n        });\n\n        return () => {\n            socket.disconnect();\n        };\n    }, []);\n\n    return (\n        <div id=\"mDiv\" className=\"teendiv\">\n            <div id=\"div1\" className=\"teendiv\">\n                {messages.map((msg, index) => (\n                    <div key={index}>{msg.text}</div>\n                ))}\n            </div>\n            <div id=\"div2\" className=\"teendiv\">\n                <ChatInput />\n            </div>\n        </div>\n    );\n}\n\nexport default MainDiv;\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,EAAE,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,MAAM,GAAGH,EAAE,CAAC,uBAAuB,CAAC;AAE1C,SAASI,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACZM,MAAM,CAACK,EAAE,CAAC,iBAAiB,EAAGC,IAAI,IAAK;MACnCF,WAAW,CAAEG,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAED,IAAI,CAAC,CAAC;IAC1D,CAAC,CAAC;IAEF,OAAO,MAAM;MACTN,MAAM,CAACQ,UAAU,CAAC,CAAC;IACvB,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIT,OAAA;IAAKU,EAAE,EAAC,MAAM;IAACC,SAAS,EAAC,SAAS;IAAAC,QAAA,gBAC9BZ,OAAA;MAAKU,EAAE,EAAC,MAAM;MAACC,SAAS,EAAC,SAAS;MAAAC,QAAA,EAC7BR,QAAQ,CAACS,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACrBf,OAAA;QAAAY,QAAA,EAAkBE,GAAG,CAACE;MAAI,GAAhBD,KAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CACnC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNpB,OAAA;MAAKU,EAAE,EAAC,MAAM;MAACC,SAAS,EAAC,SAAS;MAAAC,QAAA,eAC9BZ,OAAA,CAACH,SAAS;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACjB,EAAA,CAzBQD,OAAO;AAAAmB,EAAA,GAAPnB,OAAO;AA2BhB,eAAeA,OAAO;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}