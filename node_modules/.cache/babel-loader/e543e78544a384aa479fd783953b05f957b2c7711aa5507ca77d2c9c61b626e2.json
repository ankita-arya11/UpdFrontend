{"ast":null,"code":"var _jsxFileName = \"/Users/hipl/Documents/chatbot/ChatFrontend/src/components/ChatInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ChatInput() {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const [messageList, setMessageList] = useState([]);\n  console.log(\"message\", messageList);\n  const handleChange = event => {\n    setMessage(event.target.value);\n  };\n  const handleSubmit = () => {\n    console.log(\"Message sent: \", message);\n    setMessageList(prev => ({\n      ...prev,\n      message\n    }));\n    setMessage(\"\");\n  };\n  const handleKeyDown = event => {\n    if (event.key === \"Enter\") {\n      handleSubmit();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [messageList.map((element, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: element === null || element === void 0 ? void 0 : element.message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 18\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"ip\",\n        type: \"text\",\n        value: message,\n        onChange: handleChange,\n        onKeyDown: handleKeyDown,\n        placeholder: \"Type a message...\",\n        className: \"chat-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"sendBtn\",\n        onClick: handleSubmit,\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"senimg\",\n          src: \"src/images/buttonsend.png\",\n          alt: \"=>\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(ChatInput, \"Jhk0/PqG1Zxlo8DRX0ViMFfZr7s=\");\n_c = ChatInput;\nexport default ChatInput;\nvar _c;\n$RefreshReg$(_c, \"ChatInput\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatInput","_s","message","setMessage","messageList","setMessageList","console","log","handleChange","event","target","value","handleSubmit","prev","handleKeyDown","key","children","map","element","index","fileName","_jsxFileName","lineNumber","columnNumber","id","type","onChange","onKeyDown","placeholder","className","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/hipl/Documents/chatbot/ChatFrontend/src/components/ChatInput.js"],"sourcesContent":["import { useState } from \"react\";\n\nfunction ChatInput() {\n  const [message, setMessage] = useState(\"\");\n  const [messageList, setMessageList] = useState([]);\n\n  console.log(\"message\", messageList);\n\n  const handleChange = (event) => {\n    setMessage(event.target.value);\n  };\n\n  const handleSubmit = () => {\n    console.log(\"Message sent: \", message);\n    setMessageList((prev) => ({ ...prev, message }));\n    setMessage(\"\");\n  };\n  const handleKeyDown = (event) => {\n    if (event.key === \"Enter\") {\n      handleSubmit();\n    }\n  };\n\n  return (\n    <>\n      <div>\n        {messageList.map((element, index) => {\n          return <li key={index}>{element?.message}</li>;\n        })}\n        <div></div>\n        <input\n          id=\"ip\"\n          type=\"text\"\n          value={message}\n          onChange={handleChange}\n          onKeyDown={handleKeyDown}\n          placeholder=\"Type a message...\"\n          className=\"chat-input\"\n        />\n        <button id=\"sendBtn\" onClick={handleSubmit}>\n          {\" \"}\n          <img id=\"senimg\" src=\"src/images/buttonsend.png\" alt=\"=>\"></img>{\" \"}\n        </button>\n      </div>\n    </>\n  );\n}\n\nexport default ChatInput;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEjC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAElDW,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEH,WAAW,CAAC;EAEnC,MAAMI,YAAY,GAAIC,KAAK,IAAK;IAC9BN,UAAU,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBN,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEL,OAAO,CAAC;IACtCG,cAAc,CAAEQ,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAEX;IAAQ,CAAC,CAAC,CAAC;IAChDC,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EACD,MAAMW,aAAa,GAAIL,KAAK,IAAK;IAC/B,IAAIA,KAAK,CAACM,GAAG,KAAK,OAAO,EAAE;MACzBH,YAAY,CAAC,CAAC;IAChB;EACF,CAAC;EAED,oBACEf,OAAA,CAAAE,SAAA;IAAAiB,QAAA,eACEnB,OAAA;MAAAmB,QAAA,GACGZ,WAAW,CAACa,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,KAAK;QACnC,oBAAOtB,OAAA;UAAAmB,QAAA,EAAiBE,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEhB;QAAO,GAAxBiB,KAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAwB,CAAC;MAChD,CAAC,CAAC,eACF1B,OAAA;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU,CAAC,eACX1B,OAAA;QACE2B,EAAE,EAAC,IAAI;QACPC,IAAI,EAAC,MAAM;QACXd,KAAK,EAAET,OAAQ;QACfwB,QAAQ,EAAElB,YAAa;QACvBmB,SAAS,EAAEb,aAAc;QACzBc,WAAW,EAAC,mBAAmB;QAC/BC,SAAS,EAAC;MAAY;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC,eACF1B,OAAA;QAAQ2B,EAAE,EAAC,SAAS;QAACM,OAAO,EAAElB,YAAa;QAAAI,QAAA,GACxC,GAAG,eACJnB,OAAA;UAAK2B,EAAE,EAAC,QAAQ;UAACO,GAAG,EAAC,2BAA2B;UAACC,GAAG,EAAC;QAAI;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,EAAC,GAAG;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC,gBACN,CAAC;AAEP;AAACtB,EAAA,CA5CQD,SAAS;AAAAiC,EAAA,GAATjC,SAAS;AA8ClB,eAAeA,SAAS;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}