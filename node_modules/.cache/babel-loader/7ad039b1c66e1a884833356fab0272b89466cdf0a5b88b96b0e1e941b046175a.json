{"ast":null,"code":"var _jsxFileName = \"/Users/hipl/Documents/chatbot/ChatFrontend/src/components/ChatInput.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ChatInput() {\n  _s();\n  const [message, setMessage] = useState('');\n  const [messageList, setMessageList] = useState([]);\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    // Connect to the socket server\n    const newSocket = io(\"http://localhost:4000\"); // Replace with your server URL\n    setSocket(newSocket);\n\n    // Listen for incoming messages\n    newSocket.on('messageResponse', newMessage => {\n      setMessageList(prev => [...prev, newMessage]);\n    });\n\n    // Clean up socket connection when the component unmounts\n    return () => {\n      newSocket.disconnect();\n    };\n  }, []);\n  const handleSelect = event => {\n    setSelectedOption(event.target.value);\n  };\n  useEffect(() => {\n    const getMessage = async () => {\n      const resp = await axios.get('http://localhost:4000/api');\n      setMessageList(resp.data.messages);\n    };\n    getMessage();\n  }, []);\n  console.log(\"message\", messageList);\n  const handleChange = event => {\n    setMessage(event.target.value);\n  };\n  const handleSubmit = () => {\n    console.log('Message sent: ', message);\n    setMessageList(prev => [...prev, {\n      message: message,\n      createdAt: new Date()\n    }]);\n    if (selectedOption !== \"\") {}\n    socket.emit(JSON.stringify({\n      message: message,\n      createdAt: new Date(),\n      name: selectedOption\n    }));\n    setMessage('');\n  };\n  const handleKeyDown = event => {\n    if (event.key === 'Enter') {\n      handleSubmit();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"dropdown\",\n        children: \"Choose an option:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"dropdown\",\n        value: selectedOption,\n        onChange: handleSelect,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"--Select--\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"piyush\",\n          children: \"Piyush\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"ankita\",\n          children: \"ankita\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"hans\",\n          children: \"hans\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You selected: \", selectedOption]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [messageList.map((element, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [element.message, \" \"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 33\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"ip\",\n        type: \"text\",\n        value: message,\n        onChange: handleChange,\n        onKeyDown: handleKeyDown,\n        placeholder: \"Type a message...\",\n        className: \"chat-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"sendBtn\",\n        onClick: handleSubmit,\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"senimg\",\n          src: \"src/images/buttonsend.png\",\n          alt: \"=>\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 62\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(ChatInput, \"HvYky8rTVcDuV49amkGf5cu/jEI=\");\n_c = ChatInput;\nexport default ChatInput;\nvar _c;\n$RefreshReg$(_c, \"ChatInput\");","map":{"version":3,"names":["useState","useEffect","io","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatInput","_s","message","setMessage","messageList","setMessageList","selectedOption","setSelectedOption","socket","setSocket","newSocket","on","newMessage","prev","disconnect","handleSelect","event","target","value","getMessage","resp","get","data","messages","console","log","handleChange","handleSubmit","createdAt","Date","emit","JSON","stringify","name","handleKeyDown","key","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","map","element","index","type","onKeyDown","placeholder","className","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/hipl/Documents/chatbot/ChatFrontend/src/components/ChatInput.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\n\nimport axios from 'axios';\n\nfunction ChatInput() {\n    const [message, setMessage] = useState('');\n    const [messageList, setMessageList] = useState([]);\n    const [selectedOption, setSelectedOption] = useState(\"\");\n\n    const [socket, setSocket] = useState(null);\n\n    useEffect(() => {\n        // Connect to the socket server\n        const newSocket = io(\"http://localhost:4000\"); // Replace with your server URL\n        setSocket(newSocket);\n\n        // Listen for incoming messages\n        newSocket.on('messageResponse', (newMessage) => {\n            setMessageList((prev) => [...prev, newMessage]);\n        });\n\n        // Clean up socket connection when the component unmounts\n        return () => {\n            newSocket.disconnect();\n        };\n    }, []);\n    const handleSelect = (event) => {\n        setSelectedOption(event.target.value);\n    };\n \n    useEffect(()=>{\n        const getMessage= async() => {\n            const resp = await axios.get('http://localhost:4000/api')\n            setMessageList(resp.data.messages)\n            \n        }\n        getMessage()\n\n    },[])\n\n    console.log(\"message\", messageList);\n\n\n    const handleChange = (event) => {\n        setMessage(event.target.value);\n    };\n\n    const handleSubmit = () => {\n        console.log('Message sent: ', message);\n        setMessageList((prev) => ([...prev,{ message:message ,createdAt : new Date()}]))\n        if(selectedOption!==\"\"){\n            \n        }\n        socket.emit(JSON.stringify({ message:message ,createdAt : new Date(),name :selectedOption}))\n        setMessage('');\n    };\n    const handleKeyDown = (event) => {\n        if (event.key === 'Enter') {\n            handleSubmit();\n        }\n    }\n\n    return (\n        <>  \n             <div>\n            <label htmlFor=\"dropdown\">Choose an option:</label>\n            <select id=\"dropdown\" value={selectedOption} onChange={handleSelect}>\n                <option value=\"\">--Select--</option>\n                <option value=\"piyush\">Piyush</option>\n                <option value=\"ankita\">ankita</option>\n                <option value=\"hans\">hans</option>\n            </select>\n\n            <p>You selected: {selectedOption}</p>\n        </div>\n\n            <div>\n                \n                {messageList.map(\n                    (element, index) => {\n                        return (<li key={index}>{element.message} </li>)\n                    }\n                )}\n                <input id=\"ip\"\n                    type=\"text\"\n                    value={message}\n                    onChange={handleChange}\n                    onKeyDown={handleKeyDown}\n                    placeholder=\"Type a message...\"\n                    className=\"chat-input\"\n                />\n                <button id=\"sendBtn\" onClick={handleSubmit}> <img id=\"senimg\" src=\"src/images/buttonsend.png\" alt=\"=>\"></img> </button>\n            </div>\n        </>\n    );\n}\n\nexport default ChatInput;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}