{"ast":null,"code":"var _jsxFileName = \"/Users/hipl/Desktop/UpdChatFrontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport io from \"socket.io-client\";\nimport ChatInput from \"./components/ChatInput\";\nimport MainDiv from \"./components/MainDiv\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [roomId, setRoomId] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [roomCreated, setRoomCreated] = useState(false);\n  const socketRef = useRef(null);\n  useEffect(() => {\n    socketRef.current = io(\"http://192.168.101.32:4000\", {\n      transports: [\"websocket\"],\n      reconnection: true\n    });\n    const socket = socketRef.current;\n    socket.on(\"connect\", () => {\n      console.log(\"Connected to socket server\");\n    });\n    socket.on(\"receiveMessage\", data => {\n      setMessages(prevMessages => [...prevMessages, data]);\n    });\n    socket.on(\"receiveMessages\", data => {\n      setMessages(data); // Receive old messages when user joins\n    });\n    socket.on(\"roomCreated\", data => {\n      setRoomId(data.roomID);\n      setRoomCreated(true);\n    });\n    socket.on(\"roomJoined\", data => {\n      setRoomId(data.roomID);\n      setRoomCreated(true);\n    });\n    socket.on(\"errorMessage\", error => {\n      alert(error);\n    });\n    socket.on(\"connect_error\", () => {\n      alert(\"Socket connection failed. Check backend IP or network.\");\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n  const handleCreateRoom = () => {\n    const socket = socketRef.current;\n    if (!(socket !== null && socket !== void 0 && socket.connected)) {\n      alert(\"Socket not connected. Please refresh the page.\");\n      return;\n    }\n    if (username.trim()) {\n      socket.emit(\"createRoom\", username);\n    } else {\n      alert(\"Please enter a username.\");\n    }\n  };\n  const handleJoinRoom = () => {\n    const socket = socketRef.current;\n    if (!(socket !== null && socket !== void 0 && socket.connected)) {\n      alert(\"Socket not connected. Please refresh the page.\");\n      return;\n    }\n    if (username.trim() && roomId.trim()) {\n      socket.emit(\"joinRoom\", {\n        roomID: roomId,\n        username\n      });\n    } else {\n      alert(\"Please enter both username and Room ID.\");\n    }\n  };\n  const handleSendMessage = msg => {\n    const socket = socketRef.current;\n    if (!(socket !== null && socket !== void 0 && socket.connected)) {\n      alert(\"Socket not connected. Please refresh the page.\");\n      return;\n    }\n    if (msg.trim()) {\n      socket.emit(\"sendMessage\", {\n        roomID: roomId,\n        username,\n        message: msg\n      });\n    } else {\n      alert(\"Message cannot be empty.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: !roomCreated ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"welcome-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to Chat App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter your username\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter Room ID (optional)\",\n          value: roomId,\n          onChange: e => setRoomId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCreateRoom,\n            children: \"Create Room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleJoinRoom,\n            children: \"Join Room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"chat-header\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"room-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Room Name: \", roomName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Room ID: \", roomId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages-container\",\n        children: /*#__PURE__*/_jsxDEV(MainDiv, {\n          messages: messages\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: /*#__PURE__*/_jsxDEV(ChatInput, {\n          sendMessage: handleSendMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"336TasZkXHpfxh2AHTwM+VzK7RQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","ChatInput","MainDiv","jsxDEV","_jsxDEV","App","_s","username","setUsername","roomId","setRoomId","messages","setMessages","roomCreated","setRoomCreated","socketRef","current","transports","reconnection","socket","on","console","log","data","prevMessages","roomID","error","alert","disconnect","handleCreateRoom","connected","trim","emit","handleJoinRoom","handleSendMessage","msg","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","roomName","sendMessage","_c","$RefreshReg$"],"sources":["/Users/hipl/Desktop/UpdChatFrontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport io from \"socket.io-client\";\nimport ChatInput from \"./components/ChatInput\";\nimport MainDiv from \"./components/MainDiv\";\n\nfunction App() {\n  const [username, setUsername] = useState(\"\");\n  const [roomId, setRoomId] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [roomCreated, setRoomCreated] = useState(false);\n  const socketRef = useRef(null);\n\n  useEffect(() => {\n    socketRef.current = io(\"http://192.168.101.32:4000\", {\n      transports: [\"websocket\"],\n      reconnection: true,\n    });\n\n    const socket = socketRef.current;\n\n    socket.on(\"connect\", () => {\n      console.log(\"Connected to socket server\");\n    });\n\n    socket.on(\"receiveMessage\", (data) => {\n      setMessages((prevMessages) => [...prevMessages, data]);\n    });\n\n    socket.on(\"receiveMessages\", (data) => {\n      setMessages(data); // Receive old messages when user joins\n    });\n\n    socket.on(\"roomCreated\", (data) => {\n      setRoomId(data.roomID);\n      setRoomCreated(true);\n    });\n\n    socket.on(\"roomJoined\", (data) => {\n      setRoomId(data.roomID);\n      setRoomCreated(true);\n    });\n\n    socket.on(\"errorMessage\", (error) => {\n      alert(error);\n    });\n\n    socket.on(\"connect_error\", () => {\n      alert(\"Socket connection failed. Check backend IP or network.\");\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  const handleCreateRoom = () => {\n    const socket = socketRef.current;\n    if (!socket?.connected) {\n      alert(\"Socket not connected. Please refresh the page.\");\n      return;\n    }\n    if (username.trim()) {\n      socket.emit(\"createRoom\", username);\n    } else {\n      alert(\"Please enter a username.\");\n    }\n  };\n\n  const handleJoinRoom = () => {\n    const socket = socketRef.current;\n    if (!socket?.connected) {\n      alert(\"Socket not connected. Please refresh the page.\");\n      return;\n    }\n    if (username.trim() && roomId.trim()) {\n      socket.emit(\"joinRoom\", { roomID: roomId, username });\n    } else {\n      alert(\"Please enter both username and Room ID.\");\n    }\n  };\n\n  const handleSendMessage = (msg) => {\n    const socket = socketRef.current;\n    if (!socket?.connected) {\n      alert(\"Socket not connected. Please refresh the page.\");\n      return;\n    }\n    if (msg.trim()) {\n      socket.emit(\"sendMessage\", { roomID: roomId, username, message: msg });\n    } else {\n      alert(\"Message cannot be empty.\");\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      {!roomCreated ? (\n        <div className=\"welcome-container\">\n          <h1>Welcome to Chat App</h1>\n          <div className=\"form\">\n            <input\n              type=\"text\"\n              placeholder=\"Enter your username\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Enter Room ID (optional)\"\n              value={roomId}\n              onChange={(e) => setRoomId(e.target.value)}\n            />\n            <div className=\"button-container\">\n              <button onClick={handleCreateRoom}>Create Room</button>\n              <button onClick={handleJoinRoom}>Join Room</button>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"chat-container\">\n          <header className=\"chat-header\">\n            <div className=\"room-info\">\n              <span>Room Name: {roomName}</span>\n              <span>Room ID: {roomId}</span>\n            </div>\n          </header>\n          <div className=\"messages-container\">\n            <MainDiv messages={messages} />\n          </div>\n          <div className=\"input-container\">\n            <ChatInput sendMessage={handleSendMessage} />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}