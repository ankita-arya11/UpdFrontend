{"ast":null,"code":"var _jsxFileName = \"/Users/hipl/Documents/chatbot/ChatFrontend/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport './index.css';\nimport MainDiv from './components/mainDiv';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst newSocket = io(\"http://localhost:4000\");\nfunction App() {\n  _s();\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    // Connect to the socket server\n    // Replace with your server U\n    setSocket(newSocket);\n\n    // Listen for incoming messages\n    newSocket.on('messageResponse', newMessage => {\n      setMessageList(prev => [...prev, newMessage]);\n    });\n\n    // Clean up socket connection when the component unmounts\n    return () => {\n      newSocket.disconnect();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center'\n      },\n      id: \"cb\",\n      children: \"Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(MainDiv, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"NvwYO9vJOwIMt5STdlMKfWhuxZw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["MainDiv","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","newSocket","io","App","_s","socket","setSocket","on","newMessage","setMessageList","prev","disconnect","children","style","textAlign","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hipl/Documents/chatbot/ChatFrontend/src/App.js"],"sourcesContent":["import './App.css';\nimport './index.css'; \nimport MainDiv from './components/mainDiv';\nimport { useState ,useEffect} from 'react';\nconst newSocket = io(\"http://localhost:4000\");\n\nfunction App() {\n\n  const [socket, setSocket] = useState(null);\n  \n  useEffect(() => {\n      // Connect to the socket server\n       // Replace with your server U\n      setSocket(newSocket);\n\n      // Listen for incoming messages\n      newSocket.on('messageResponse', (newMessage) => {\n          setMessageList((prev) => [...prev, newMessage]);\n      });\n\n      // Clean up socket connection when the component unmounts\n      return () => {\n          newSocket.disconnect();\n      };\n  }, []);\n  return (\n    <>\n    <h1 style={{textAlign:'center'}} id='cb'>Chatbot</h1>\n      <MainDiv/>\n    </>\n  );\n}\n\nexport default App;\n\n\n\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAO,aAAa;AACpB,OAAOA,OAAO,MAAM,sBAAsB;AAC1C,SAASC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAC3C,MAAMC,SAAS,GAAGC,EAAE,CAAC,uBAAuB,CAAC;AAE7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACZ;IACC;IACDU,SAAS,CAACL,SAAS,CAAC;;IAEpB;IACAA,SAAS,CAACM,EAAE,CAAC,iBAAiB,EAAGC,UAAU,IAAK;MAC5CC,cAAc,CAAEC,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEF,UAAU,CAAC,CAAC;IACnD,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACTP,SAAS,CAACU,UAAU,CAAC,CAAC;IAC1B,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EACN,oBACEb,OAAA,CAAAE,SAAA;IAAAY,QAAA,gBACAd,OAAA;MAAIe,KAAK,EAAE;QAACC,SAAS,EAAC;MAAQ,CAAE;MAACC,EAAE,EAAC,IAAI;MAAAH,QAAA,EAAC;IAAO;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnDrB,OAAA,CAACJ,OAAO;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eACV,CAAC;AAEP;AAACf,EAAA,CAzBQD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AA2BZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}