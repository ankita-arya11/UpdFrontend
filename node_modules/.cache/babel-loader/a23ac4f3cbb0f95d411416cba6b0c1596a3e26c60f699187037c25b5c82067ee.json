{"ast":null,"code":"var _jsxFileName = \"/Users/hipl/Downloads/newChatbot/ChatFrontendUpd/src/components/ChatInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatInput({\n  socket,\n  roomId,\n  username\n}) {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const handleSend = () => {\n    if (message.trim()) {\n      socket.emit(\"sendMessage\", {\n        roomID: roomId,\n        username: username,\n        message: message\n      });\n      setMessage(\"\"); // Clear input field after sending\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-input\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Type a message\",\n      value: message,\n      onChange: e => setMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSend,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatInput, \"EiOGSxO4GWQlH0sM782nQ9JwuAs=\");\n_c = ChatInput;\nexport default ChatInput;\nvar _c;\n$RefreshReg$(_c, \"ChatInput\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ChatInput","socket","roomId","username","_s","message","setMessage","handleSend","trim","emit","roomID","className","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/hipl/Downloads/newChatbot/ChatFrontendUpd/src/components/ChatInput.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction ChatInput({ socket, roomId, username }) {\n  const [message, setMessage] = useState(\"\");\n\n  const handleSend = () => {\n    if (message.trim()) {\n      socket.emit(\"sendMessage\", { roomID: roomId, username: username, message: message });\n      setMessage(\"\"); // Clear input field after sending\n    }\n  };\n\n  return (\n    <div className=\"chat-input\">\n      <input\n        type=\"text\"\n        placeholder=\"Type a message\"\n        value={message}\n        onChange={(e) => setMessage(e.target.value)}\n      />\n      <button onClick={handleSend}>Send</button>\n    </div>\n  );\n}\n\nexport default ChatInput;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,SAASA,CAAC;EAAEC,MAAM;EAAEC,MAAM;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC/C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMU,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIF,OAAO,CAACG,IAAI,CAAC,CAAC,EAAE;MAClBP,MAAM,CAACQ,IAAI,CAAC,aAAa,EAAE;QAAEC,MAAM,EAAER,MAAM;QAAEC,QAAQ,EAAEA,QAAQ;QAAEE,OAAO,EAAEA;MAAQ,CAAC,CAAC;MACpFC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;IAClB;EACF,CAAC;EAED,oBACEP,OAAA;IAAKY,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBb,OAAA;MACEc,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,gBAAgB;MAC5BC,KAAK,EAAEV,OAAQ;MACfW,QAAQ,EAAGC,CAAC,IAAKX,UAAU,CAACW,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACFvB,OAAA;MAAQwB,OAAO,EAAEhB,UAAW;MAAAK,QAAA,EAAC;IAAI;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV;AAAClB,EAAA,CArBQJ,SAAS;AAAAwB,EAAA,GAATxB,SAAS;AAuBlB,eAAeA,SAAS;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}