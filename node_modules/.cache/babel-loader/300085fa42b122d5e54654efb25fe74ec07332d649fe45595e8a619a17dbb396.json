{"ast":null,"code":"var _jsxFileName = \"/Users/hipl/Documents/chatbot/ChatFrontend/src/components/mainDiv.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import ChatInput from './ChatInput';    \n\n// function MainDiv(){\n//     return (\n//         <>\n//             <div id='mDiv' className='teendiv'>\n//                 <div id='div1' className='teendiv' ></div>\n//                 <div id='div2' className='teendiv'>\n//                     <ChatInput/>\n//                 </div>\n//             </div>\n//         </>\n//     )\n// }\n// export default MainDiv;\n\nimport React, { useEffect, useState } from \"react\";\nimport ChatInput from \"./ChatInput\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:4000\");\nfunction MainDiv({\n  username\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    socket.on(\"messageResponse\", data => {\n      setMessages(prevMessages => [...prevMessages, data]);\n    });\n    return () => socket.disconnect();\n  }, []);\n  const handleSendMessage = message => {\n    const newMessage = {\n      username,\n      text: message,\n      sentByCurrentUser: true\n    };\n    setMessages(prevMessages => [...prevMessages, newMessage]); // Show sent message instantly\n    socket.emit(\"message\", JSON.stringify(newMessage)); // Send to backend\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      height: \"100vh\",\n      padding: \"10px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        overflowY: \"auto\",\n        padding: \"10px\",\n        border: \"1px solid black\",\n        backgroundColor: \"#f9f9f9\"\n      },\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: msg.sentByCurrentUser ? \"right\" : \"left\",\n          margin: \"5px 0\",\n          padding: \"10px\",\n          backgroundColor: msg.sentByCurrentUser ? \"#d1ffd6\" : \"#e6e6e6\",\n          borderRadius: \"10px\",\n          display: \"inline-block\"\n        },\n        children: [!msg.sentByCurrentUser && /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.username, \": \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 52\n        }, this), msg.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n      onSend: handleSendMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s(MainDiv, \"RyA59LRbn9goj/9N7rELX+NWNVI=\");\n_c = MainDiv;\nexport default MainDiv;\nvar _c;\n$RefreshReg$(_c, \"MainDiv\");","map":{"version":3,"names":["React","useEffect","useState","ChatInput","io","jsxDEV","_jsxDEV","socket","MainDiv","username","_s","messages","setMessages","on","data","prevMessages","disconnect","handleSendMessage","message","newMessage","text","sentByCurrentUser","emit","JSON","stringify","style","display","flexDirection","height","padding","children","flex","overflowY","border","backgroundColor","map","msg","index","textAlign","margin","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","onSend","_c","$RefreshReg$"],"sources":["/Users/hipl/Documents/chatbot/ChatFrontend/src/components/mainDiv.js"],"sourcesContent":["// import React from 'react';\n// import ChatInput from './ChatInput';    \n\n// function MainDiv(){\n//     return (\n//         <>\n//             <div id='mDiv' className='teendiv'>\n//                 <div id='div1' className='teendiv' ></div>\n//                 <div id='div2' className='teendiv'>\n//                     <ChatInput/>\n//                 </div>\n//             </div>\n//         </>\n//     )\n// }\n// export default MainDiv;\n\n\nimport React, { useEffect, useState } from \"react\";\nimport ChatInput from \"./ChatInput\";\nimport { io } from \"socket.io-client\";\n\nconst socket = io(\"http://localhost:4000\");\n\nfunction MainDiv({ username }) {\n    const [messages, setMessages] = useState([]);\n\n    useEffect(() => {\n        socket.on(\"messageResponse\", (data) => {\n            setMessages((prevMessages) => [...prevMessages, data]);\n        });\n\n        return () => socket.disconnect();\n    }, []);\n\n    const handleSendMessage = (message) => {\n        const newMessage = { username, text: message, sentByCurrentUser: true };\n        setMessages((prevMessages) => [...prevMessages, newMessage]); // Show sent message instantly\n        socket.emit(\"message\", JSON.stringify(newMessage)); // Send to backend\n    };\n\n    return (\n        <div style={{ display: \"flex\", flexDirection: \"column\", height: \"100vh\", padding: \"10px\" }}>\n            <div\n                style={{\n                    flex: 1,\n                    overflowY: \"auto\",\n                    padding: \"10px\",\n                    border: \"1px solid black\",\n                    backgroundColor: \"#f9f9f9\",\n                }}\n            >\n                {messages.map((msg, index) => (\n                    <div\n                        key={index}\n                        style={{\n                            textAlign: msg.sentByCurrentUser ? \"right\" : \"left\",\n                            margin: \"5px 0\",\n                            padding: \"10px\",\n                            backgroundColor: msg.sentByCurrentUser ? \"#d1ffd6\" : \"#e6e6e6\",\n                            borderRadius: \"10px\",\n                            display: \"inline-block\",\n                        }}\n                    >\n                        {!msg.sentByCurrentUser && <strong>{msg.username}: </strong>}\n                        {msg.text}\n                    </div>\n                ))}\n            </div>\n            <ChatInput onSend={handleSendMessage} />\n        </div>\n    );\n}\n\nexport default MainDiv;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}